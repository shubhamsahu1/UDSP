{"version":3,"file":"static/js/199.cedc7a3f.chunk.js","mappings":"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","sources":["components/Layout/Header.js","components/Layout/Sidebar.js","components/Layout/Layout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Avatar,\n  Box,\n  Divider,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport {\n  AccountCircle,\n  Settings,\n  Logout,\n  Lock,\n  People,\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { USER_ROLES } from '../../constants/roles';\n\nconst Header = () => {\n  const { t, i18n } = useTranslation();\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [langAnchorEl, setLangAnchorEl] = useState(null);\n\n  // Close menus automatically when the route changes\n  useEffect(() => {\n    setAnchorEl(null);\n    setLangAnchorEl(null);\n  }, [location.pathname]);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setLangAnchorEl(null);\n  };\n\n  const handleLangMenu = (event) => {\n    setLangAnchorEl(event.currentTarget);\n  };\n\n  const handleChangeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n    setLangAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n    handleClose();\n    navigate('/login');\n  };\n\n  const handleChangePassword = () => {\n    handleClose();\n    navigate('/change-password');\n  };\n\n  const handleProfile = () => {\n    handleClose();\n    navigate('/profile');\n  };\n\n  const handleUserManagement = () => {\n    handleClose();\n    navigate('/user-management');\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1, borderRadius: 0 }}>\n      <Toolbar>\n        <Typography variant=\"h6\"  sx={{ flexGrow: 1, ml: 4 }}>\n          {t('app.name')}\n        </Typography>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls={open ? 'menu-appbar' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <Avatar sx={{ width: 32, height: 32, bgcolor: 'secondary.main' }}>\n              {user?.firstName?.charAt(0)?.toUpperCase() || 'U'}\n            </Avatar>\n          </IconButton>\n          <Menu\n            key={location.pathname} // Force re-render on navigation\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={open}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleProfile}>\n              <AccountCircle sx={{ mr: 1 }} />\n             {user?.firstName} {user?.lastName}\n            </MenuItem>\n            <MenuItem disabled>\n              <Settings sx={{ mr: 1 }} />\n              {t('menu.role')}: {user?.role}\n            </MenuItem>\n            <Divider />\n            {user?.role === USER_ROLES.ADMIN && (\n              <MenuItem onClick={handleUserManagement}>\n                <People sx={{ mr: 1 }} />\n                User Management\n              </MenuItem>\n            )}\n            <MenuItem onClick={handleChangePassword}>\n              <Lock sx={{ mr: 1 }} />\n              {t('menu.changePassword')}\n            </MenuItem>\n            <MenuItem onClick={handleLogout}>\n              <Logout sx={{ mr: 1 }} />\n              {t('menu.logout')}\n            </MenuItem>\n            <Divider />\n            <MenuItem onClick={handleLangMenu}>\n              <span role=\"img\" aria-label=\"language\" style={{ marginRight: 8 }}>🌐</span>\n              {t('menu.changeLanguage')}\n            </MenuItem>\n          </Menu>\n          <Menu\n            key={`lang-${location.pathname}`} // Force re-render on navigation\n            id=\"lang-menu\"\n            anchorEl={langAnchorEl}\n            open={Boolean(langAnchorEl)}\n            onClose={handleClose}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          >\n            <MenuItem onClick={() => handleChangeLanguage('en')} selected={i18n.language === 'en'}>\n              <ListItemIcon>🇺🇸</ListItemIcon>\n              <ListItemText>English</ListItemText>\n            </MenuItem>\n            <MenuItem onClick={() => handleChangeLanguage('es')} selected={i18n.language === 'es'}>\n              <ListItemIcon>🇪🇸</ListItemIcon>\n              <ListItemText>Español</ListItemText>\n            </MenuItem>\n          </Menu>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header; ","import React, { startTransition } from 'react';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  useTheme,\n  useMediaQuery,\n  Toolbar,\n} from '@mui/material';\nimport {\n  Dashboard,\n  Person,\n  Science,\n  Assessment,\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { USER_ROLES } from '../../constants/roles';\n\nconst drawerWidth = 240;\n\nconst menuItems = [\n  { text: 'nav.dashboard', icon: Dashboard, path: '/dashboard', roles: ['admin', 'staff'] },\n  { text: 'nav.labtest', icon: Science, path: '/labtest', roles: ['admin'] },\n  { text: 'nav.reports', icon: Assessment, path: '/reports', roles: ['admin'] },\n  { text: 'nav.profile', icon: Person, path: '/profile', roles: ['admin', 'staff'] },\n];\n\nconst Sidebar = ({ open, onClose }) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  // Filter menu items based on user role\n  const visibleMenuItems = menuItems.filter(item => \n    item.roles.includes(user?.role)\n  );\n\n  const handleNavigation = (path) => {\n    startTransition(() => {\n      navigate(path);\n      if (isMobile) {\n        onClose();\n      }\n    });\n  };\n\n  const drawerContent = (\n    <>\n      <List sx={{ pt: 2 }}>\n        {visibleMenuItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = location.pathname === item.path;\n          \n          return (\n            <ListItem key={item.text} disablePadding>\n              <ListItemButton\n                onClick={() => handleNavigation(item.path)}\n                selected={isActive}\n                sx={{\n                  mx: 1,\n                  borderRadius: 1,\n                  '&.Mui-selected': {\n                    backgroundColor: 'primary.main',\n                    color: 'primary.contrastText',\n                    '&:hover': {\n                      backgroundColor: 'primary.dark',\n                    },\n                    '& .MuiListItemIcon-root': {\n                      color: 'primary.contrastText',\n                    },\n                  },\n                }}\n              >\n                <ListItemIcon>\n                  <Icon />\n                </ListItemIcon>\n                <ListItemText primary={t(item.text)} />\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n\n  if (isMobile) {\n    return (\n      <Drawer\n        variant=\"temporary\"\n        open={open}\n        onClose={onClose}\n        ModalProps={{\n          keepMounted: true,\n        }}\n        sx={{\n          display: { xs: 'block', md: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: drawerWidth,\n          },\n        }}\n      >\n        <Toolbar />\n        {drawerContent}\n      </Drawer>\n    );\n  }\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        display: { xs: 'none', md: 'block' },\n        '& .MuiDrawer-paper': {\n          boxSizing: 'border-box',\n          width: drawerWidth,\n        },\n      }}\n      open\n    >\n      <Toolbar />\n      {drawerContent}\n    </Drawer>\n  );\n};\n\nexport default Sidebar; ","import React, { useState } from 'react';\nimport {\n  Box,\n  Toolbar,\n  useTheme,\n  useMediaQuery,\n  IconButton,\n} from '@mui/material';\nimport { Menu as MenuIcon } from '@mui/icons-material';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { Outlet } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst Layout = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Header />\n      \n      {isMobile && (\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleDrawerToggle}\n          sx={{\n            position: 'fixed',\n            top: 8,\n            left: 8,\n            zIndex: (theme) => theme.zIndex.drawer + 2,\n            backgroundColor: 'primary.main',\n            color: 'white',\n            '&:hover': {\n              backgroundColor: 'primary.dark',\n            },\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n      )}\n      \n      <Sidebar open={mobileOpen} onClose={handleDrawerToggle} />\n      \n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 1.5,\n          pt: 1,\n          width: { md: `calc(100% - ${drawerWidth}px)` },\n          ml: { md: `${drawerWidth}px` },\n        }}\n      >\n        <Toolbar />\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Layout; "],"names":["Header","_user$firstName","_user$firstName$charA","t","i18n","useTranslation","user","logout","useAuth","navigate","useNavigate","location","useLocation","anchorEl","setAnchorEl","useState","langAnchorEl","setLangAnchorEl","useEffect","pathname","handleClose","handleChangeLanguage","lng","changeLanguage","open","Boolean","_jsx","AppBar","position","sx","zIndex","theme","drawer","borderRadius","children","_jsxs","Toolbar","Typography","variant","flexGrow","ml","Box","display","alignItems","gap","IconButton","size","undefined","onClick","event","currentTarget","color","Avatar","width","height","bgcolor","firstName","charAt","toUpperCase","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","handleProfile","AccountCircle","mr","lastName","disabled","Settings","role","Divider","USER_ROLES","ADMIN","handleUserManagement","People","handleChangePassword","Lock","handleLogout","Logout","style","marginRight","selected","language","ListItemIcon","ListItemText","concat","menuItems","text","icon","Dashboard","path","roles","Science","Assessment","Person","_ref","useTheme","isMobile","useMediaQuery","breakpoints","down","visibleMenuItems","filter","item","includes","drawerContent","_Fragment","List","pt","map","Icon","isActive","ListItem","disablePadding","ListItemButton","handleNavigation","startTransition","mx","backgroundColor","primary","Drawer","ModalProps","xs","md","boxSizing","Layout","mobileOpen","setMobileOpen","handleDrawerToggle","edge","top","left","MenuIcon","Sidebar","component","p","Outlet"],"sourceRoot":""}